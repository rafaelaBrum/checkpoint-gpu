include ../common.mk

# Example
# target: dependencies
	# command 1
	# command 2
          # .
          # .
          # .
	# command n
ifdef OUTPUT
override OUTPUT = -DOUTPUT
endif

C_C = gcc
OMP_LIB = -lgomp
OMP_FLAG = -fopenmp

CUD_C = $(CUDA_ROOT)/bin/nvcc
# OMP_FLAG =	-Xcompiler paste_one_here
CUDA_FLAG = -arch sm_30

# link objects (binaries) together
a.out:		lavaMD.o ./kernel/kernel_gpu_cuda_wrapper.o ./util/num/num.o ./util/timer/timer.o ./util/device/device.o
	$(C_C) $(KERNEL_DIM) lavaMD.o ./kernel/kernel_gpu_cuda_wrapper.o ./util/num/num.o ./util/timer/timer.o ./util/device/device.o -lm -L/usr/local/cuda-8.0/lib64 -lcuda -lcudart $(OMP_LIB) -o lavaMD

# compile function files into objects (binaries)
lavaMD.o:		lavaMD.h lavaMD.c ./kernel/kernel_gpu_cuda_wrapper.h ./kernel/kernel_gpu_cuda_wrapper.cu ./util/num/num.h ./util/num/num.c ./util/timer/timer.h ./util/timer/timer.c ./util/device/device.h ./util/device/device.cu
	$(C_C) $(KERNEL_DIM) $(OUTPUT) lavaMD.c -c -o lavaMD.o -O3

./kernel/kernel_gpu_cuda_wrapper.o:	./kernel/kernel_gpu_cuda_wrapper.h ./kernel/kernel_gpu_cuda_wrapper.cu
	$(CUD_C) $(KERNEL_DIM) ./kernel/kernel_gpu_cuda_wrapper.cu -c -o ./kernel/kernel_gpu_cuda_wrapper.o -O3 $(CUDA_FLAG)

./util/num/num.o:	./util/num/num.h ./util/num/num.c
	$(C_C) ./util/num/num.c -c -o ./util/num/num.o -O3

./util/timer/timer.o:	./util/timer/timer.h ./util/timer/timer.c
	$(C_C) ./util/timer/timer.c -c -o ./util/timer/timer.o -O3

./util/device/device.o:	./util/device/device.h ./util/device/device.cu
	$(CUD_C) ./util/device/device.cu -c -o ./util/device/device.o -O3 $(CUDA_FLAG)

# delete all object and executable files
clean:
	rm *.o ./kernel/*.o ./util/num/*.o ./util/timer/*.o ./util/device/*.o lavaMD Makefile
